{"version":3,"sources":["webpack:///./src/app/actions/collection.ts","webpack:///./src/app/services/google-books.ts","webpack:///./src/app/util.ts","webpack:///./src/app/actions/layout.ts","webpack:///./src/app/containers/collection-page.ts","webpack:///./src/app/containers/details/details.component.ts","webpack:///./src/app/containers/find-book-page.ts","webpack:///./src/app/containers/not-found-page.ts","webpack:///./src/app/containers/resume/resume.component.ts","webpack:///./src/app/containers/view-book-page.ts","webpack:///./src/app/guards/book-exists.ts","webpack:///./src/environments/environment.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/book-authors.ts","webpack:///./src/app/components/book-detail.ts","webpack:///./src/app/components/book-preview-list.ts","webpack:///./src/app/components/book-preview.ts","webpack:///./src/app/components/book-search.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/components/layout.ts","webpack:///./src/app/components/nav-item.ts","webpack:///./src/app/components/sidenav.ts","webpack:///./src/app/components/toolbar.ts","webpack:///./src/app/containers/app.ts","webpack:///./src/app/containers/selected-book-page.ts","webpack:///./src/app/db.ts","webpack:///./src/app/effects/book.ts","webpack:///./src/app/effects/collection.ts","webpack:///./src/app/pipes/add-commas.ts","webpack:///./src/app/pipes/ellipsis.ts","webpack:///./src/app/pipes/index.ts","webpack:///./src/app/reducers/books.ts","webpack:///./src/app/reducers/collection.ts","webpack:///./src/app/reducers/layout.ts","webpack:///./src/app/reducers/search.ts","webpack:///./src/app/routes.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/containers/details/details.component.css","webpack:///./src/app/containers/resume/resume.component.css","webpack:///./src/app/containers/details/details.component.html","webpack:///./src/app/containers/resume/resume.component.html","webpack:///./src/app/actions/book.ts","webpack:///./src/app/reducers/index.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Action } from '@ngrx/store';\nimport { Book } from '../models/book';\nimport { type } from '../util';\n\n\nexport const ActionTypes = {\n  ADD_BOOK:             type('[Collection] Add Book'),\n  ADD_BOOK_SUCCESS:     type('[Collection] Add Book Success'),\n  ADD_BOOK_FAIL:        type('[Collection] Add Book Fail'),\n  REMOVE_BOOK:          type('[Collection] Remove Book'),\n  REMOVE_BOOK_SUCCESS:  type('[Collection] Remove Book Success'),\n  REMOVE_BOOK_FAIL:     type('[Collection] Remove Book Fail'),\n  LOAD:                 type('[Collection] Load'),\n  LOAD_SUCCESS:         type('[Collection] Load Success'),\n  LOAD_FAIL:            type('[Collection] Load Fail'),\n};\n\n\n/**\n * Add Book to Collection Actions\n */\nexport class AddBookAction implements Action {\n  type = ActionTypes.ADD_BOOK;\n\n  constructor(public payload: Book) { }\n}\n\nexport class AddBookSuccessAction implements Action {\n  type = ActionTypes.ADD_BOOK_SUCCESS;\n\n  constructor(public payload: Book) { }\n}\n\nexport class AddBookFailAction implements Action {\n  type = ActionTypes.ADD_BOOK_FAIL;\n\n  constructor(public payload: Book) { }\n}\n\n\n/**\n * Remove Book from Collection Actions\n */\nexport class RemoveBookAction implements Action {\n  type = ActionTypes.REMOVE_BOOK;\n\n  constructor(public payload: Book) { }\n}\n\nexport class RemoveBookSuccessAction implements Action {\n  type = ActionTypes.REMOVE_BOOK_SUCCESS;\n\n  constructor(public payload: Book) { }\n}\n\nexport class RemoveBookFailAction implements Action {\n  type = ActionTypes.REMOVE_BOOK_FAIL;\n\n  constructor(public payload: Book) { }\n}\n\n/**\n * Load Collection Actions\n */\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n\n  constructor() { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n\n  constructor(public payload: Book[]) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any) { }\n}\n\n\nexport type Actions\n  = AddBookAction\n  | AddBookSuccessAction\n  | AddBookFailAction\n  | RemoveBookAction\n  | RemoveBookSuccessAction\n  | RemoveBookFailAction\n  | LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/actions/collection.ts","import 'rxjs/add/operator/map';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Book } from '../models/book';\n\n\n@Injectable()\nexport class GoogleBooksService {\n  private API_PATH: string = 'https://www.googleapis.com/books/v1/volumes';\n\n  constructor(private http: Http) {}\n\n  searchBooks(queryTitle: string): Observable<Book[]> {\n    return this.http.get(`${this.API_PATH}?q=${queryTitle}`)\n      .map(res => res.json().items || []);\n  }\n\n  retrieveBook(volumeId: string): Observable<Book> {\n    return this.http.get(`${this.API_PATH}/${volumeId}`)\n      .map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/google-books.ts","/**\n * This function coerces a string into a string literal type.\n * Using tagged union types in TypeScript 2.0, this enables\n * powerful typechecking of our reducers.\n * \n * Since every action label passes through this function it\n * is a good place to ensure all of our action labels\n * are unique.\n */\n\nlet typeCache: { [label: string]: boolean } = {};\nexport function type<T>(label: T | ''): T {\n  if (typeCache[<string>label]) {\n    throw new Error(`Action type \"${label}\" is not unique\"`);\n  }\n\n  typeCache[<string>label] = true;\n\n  return <T>label;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/util.ts","import { Action } from '@ngrx/store';\nimport { type } from '../util';\n\nexport const ActionTypes = {\n  OPEN_SIDENAV:   type('[Layout] Open Sidenav'),\n  CLOSE_SIDENAV:  type('[Layout] Close Sidenav')\n};\n\n\nexport class OpenSidenavAction implements Action {\n  type = ActionTypes.OPEN_SIDENAV;\n}\n\nexport class CloseSidenavAction implements Action {\n  type = ActionTypes.CLOSE_SIDENAV;\n}\n\n\nexport type Actions\n  = OpenSidenavAction\n  | CloseSidenavAction;\n\n\n// WEBPACK FOOTER //\n// ./src/app/actions/layout.ts","import 'rxjs/add/operator/let';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport * as fromRoot from '../reducers';\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-collection-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <md-card>\n      <md-card-title>My Collection</md-card-title>\n    </md-card>\n\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  `,\n  /**\n   * Container components are permitted to have just enough styles\n   * to bring the view together. If the number of styles grow,\n   * consider breaking them out into presentational \n   * components.\n   */\n  styles: [`\n    md-card-title {\n      display: flex;\n      justify-content: center;\n    }\n  `]\n})\nexport class CollectionPageComponent {\n  books$: Observable<Book[]>;\n\n  constructor(store: Store<fromRoot.State>) {\n    this.books$ = store.select(fromRoot.getBookCollection);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/collection-page.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/details/details.component.ts","import 'rxjs/add/operator/let';\nimport 'rxjs/add/operator/take';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as fromRoot from '../reducers';\nimport * as book from '../actions/book';\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-find-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-book-search [query]=\"searchQuery$ | async\" [searching]=\"loading$ | async\" (search)=\"search($event)\"></bc-book-search>\n    <bc-book-preview-list [books]=\"books$ | async\"></bc-book-preview-list>\n  `\n})\nexport class FindBookPageComponent {\n  searchQuery$: Observable<string>;\n  books$: Observable<Book[]>;\n  loading$: Observable<boolean>;\n\n  constructor(private store: Store<fromRoot.State>) {\n    this.searchQuery$ = store.select(fromRoot.getSearchQuery).take(1);\n    this.books$ = store.select(fromRoot.getSearchResults);\n    this.loading$ = store.select(fromRoot.getSearchLoading);\n  }\n\n  search(query: string) {\n    this.store.dispatch(new book.SearchAction(query));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/find-book-page.ts","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n\n@Component({\n  selector: 'bc-not-found-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <md-card>\n      <md-card-title>404: Not Found</md-card-title>\n      <md-card-content>\n        <p>Hey! It looks like this page doesn't exist yet.</p>\n      </md-card-content>\n      <md-card-actions>\n        <button md-raised-button color=\"primary\" routerLink=\"/\">Take Me Home</button>\n      </md-card-actions>\n    </md-card>\n  `,\n  styles: [`\n    :host {\n      text-align: center;\n    }\n  `]\n})\nexport class NotFoundPageComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/not-found-page.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/resume/resume.component.ts","import '@ngrx/core/add/operator/select';\nimport 'rxjs/add/operator/map';\nimport { Component, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport * as fromRoot from '../reducers';\nimport * as book from '../actions/book';\n\n/**\n * Note: Container components are also reusable. Whether or not \n * a component is a presentation component or a container\n * component is an implementation detail.\n * \n * The View Book Page's responsibility is to map router params\n * to a 'Select' book action. Actually showing the selected\n * book remains a responsibility of the \n * SelectedBookPageComponent\n */\n@Component({\n  selector: 'bc-view-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-selected-book-page></bc-selected-book-page>\n  `\n})\nexport class ViewBookPageComponent implements OnDestroy {\n  actionsSubscription: Subscription;\n\n  constructor(private store: Store<fromRoot.State>, route: ActivatedRoute) {\n    this.actionsSubscription = route.params\n      .select<string>('id')\n      .map(id => new book.SelectAction(id))\n      .subscribe(store);\n  }\n\n  ngOnDestroy() {\n    this.actionsSubscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/view-book-page.ts","import 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/let';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\nimport { GoogleBooksService } from '../services/google-books';\nimport * as fromRoot from '../reducers';\nimport * as book from '../actions/book';\n\n\n/**\n * Guards are hooks into the route resolution process, providing an opportunity\n * to inform the router's navigation process whether the route should continue\n * to activate this route. Guards must return an observable of true or false.\n */\n@Injectable()\nexport class BookExistsGuard implements CanActivate {\n  constructor(\n    private store: Store<fromRoot.State>,\n    private googleBooks: GoogleBooksService,\n    private router: Router\n  ) { }\n\n  /**\n   * This method creates an observable that waits for the `loaded` property\n   * of the collection state to turn `true`, emitting one time once loading\n   * has finished.\n   */\n  waitForCollectionToLoad(): Observable<boolean> {\n    return this.store.select(fromRoot.getCollectionLoaded)\n      .filter(loaded => loaded)\n      .take(1);\n  }\n\n  /**\n   * This method checks if a book with the given ID is already registered\n   * in the Store\n   */\n  hasBookInStore(id: string): Observable<boolean> {\n    return this.store.select(fromRoot.getBookEntities)\n      .map(entities => !!entities[id])\n      .take(1);\n  }\n\n  /**\n   * This method loads a book with the given ID from the API and caches\n   * it in the store, returning `true` or `false` if it was found.\n   */\n  hasBookInApi(id: string): Observable<boolean> {\n    return this.googleBooks.retrieveBook(id)\n      .map(bookEntity => new book.LoadAction(bookEntity))\n      .do((action: book.LoadAction) => this.store.dispatch(action))\n      .map(book => !!book)\n      .catch(() => {\n        this.router.navigate(['/404']);\n        return of(false);\n      });\n  }\n\n  /**\n   * `hasBook` composes `hasBookInStore` and `hasBookInApi`. It first checks\n   * if the book is in store, and if not it then checks if it is in the\n   * API.\n   */\n  hasBook(id: string): Observable<boolean> {\n    return this.hasBookInStore(id)\n      .switchMap(inStore => {\n        if (inStore) {\n          return of(inStore);\n        }\n\n        return this.hasBookInApi(id);\n      });\n  }\n\n  /**\n   * This is the actual method the router will call when our guard is run.\n   *\n   * Our guard waits for the collection to load, then it checks if we need\n   * to request a book from the API or if we already have it in our cache.\n   * If it finds it in the cache or in the API, it returns an Observable\n   * of `true` and the route is rendered successfully.\n   *\n   * If it was unable to find it in our cache or in the API, this guard\n   * will return an Observable of `false`, causing the router to move\n   * on to the next candidate route. In this case, it will move on\n   * to the 404 page.\n   */\n  canActivate(route: ActivatedRouteSnapshot): Observable<boolean> {\n    return this.waitForCollectionToLoad()\n      .switchMap(() => this.hasBook(route.params['id']));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/book-exists.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 535;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 535\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { NgModule, } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { DBModule } from '@ngrx/db';\nimport { RouterStoreModule } from '@ngrx/router-store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { MaterialModule } from '@angular/material';\n\nimport { ComponentsModule } from './components';\nimport { BookEffects } from './effects/book';\nimport { CollectionEffects } from './effects/collection';\nimport { BookExistsGuard } from './guards/book-exists';\n\nimport { AppComponent } from './containers/app';\nimport { FindBookPageComponent } from './containers/find-book-page';\nimport { ViewBookPageComponent } from './containers/view-book-page';\nimport { ResumeComponent } from './containers/resume/resume.component';\nimport { DetailsComponent } from './containers/details/details.component';\nimport { SelectedBookPageComponent } from './containers/selected-book-page';\nimport { CollectionPageComponent } from './containers/collection-page';\nimport { NotFoundPageComponent } from './containers/not-found-page';\n\nimport { GoogleBooksService } from './services/google-books';\n\nimport { routes } from './routes';\nimport { reducer } from './reducers';\nimport { schema } from './db';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MaterialModule.forRoot(),\n    ComponentsModule,\n    RouterModule.forRoot(routes, { useHash: true }),\n\n    /**\n     * StoreModule.provideStore is imported once in the root module, accepting a reducer\n     * function or object map of reducer functions. If passed an object of\n     * reducers, combineReducers will be run creating your application\n     * meta-reducer. This returns all providers for an @ngrx/store\n     * based application.\n     */\n    StoreModule.provideStore(reducer),\n\n    /**\n     * @ngrx/router-store keeps router state up-to-date in the store and uses\n     * the store as the single source of truth for the router's state.\n     */\n    RouterStoreModule.connectRouter(),\n\n    /**\n     * Store devtools instrument the store retaining past versions of state\n     * and recalculating new states. This enables powerful time-travel\n     * debugging.\n     * \n     * To use the debugger, install the Redux Devtools extension for either\n     * Chrome or Firefox\n     * \n     * See: https://github.com/zalmoxisus/redux-devtools-extension\n     */\n    StoreDevtoolsModule.instrumentOnlyWithExtension(),\n\n    /**\n     * EffectsModule.run() sets up the effects class to be initialized\n     * immediately when the application starts.\n     *\n     * See: https://github.com/ngrx/effects/blob/master/docs/api.md#run\n     */\n    EffectsModule.run(BookEffects),\n    EffectsModule.run(CollectionEffects),\n\n    /**\n     * `provideDB` sets up @ngrx/db with the provided schema and makes the Database\n     * service available.\n     */\n    DBModule.provideDB(schema),\n  ],\n  declarations: [\n    AppComponent,\n    FindBookPageComponent,\n    ResumeComponent,\n    DetailsComponent,\n    SelectedBookPageComponent,\n    ViewBookPageComponent,\n    CollectionPageComponent,\n    NotFoundPageComponent,\n    ResumeComponent,\n    DetailsComponent\n  ],\n  providers: [\n    BookExistsGuard,\n    GoogleBooksService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input } from '@angular/core';\n\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-book-authors',\n  template: `\n    <h5 md-subheader>Written By:</h5>\n    <span>\n      {{ authors | bcAddCommas }}\n    </span>\n  `,\n  styles: [`\n    h5 {\n      margin-bottom: 5px;\n    }\n  `]\n})\nexport class BookAuthorsComponent {\n  @Input() book: Book;\n\n  get authors() {\n    return this.book.volumeInfo.authors;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/book-authors.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-book-detail',\n  template: `\n    <md-card *ngIf=\"book\">\n      <md-card-title-group>\n        <md-card-title>{{ title }}</md-card-title>\n        <md-card-subtitle *ngIf=\"subtitle\">{{ subtitle }}</md-card-subtitle>\n        <img md-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n      </md-card-title-group>\n      <md-card-content>\n        <p [innerHtml]=\"description\"></p>\n      </md-card-content>\n      <md-card-footer class=\"footer\">\n        <bc-book-authors [book]=\"book\"></bc-book-authors>\n      </md-card-footer>\n      <md-card-actions align=\"end\">\n        <button md-raised-button color=\"warn\" *ngIf=\"inCollection\" (click)=\"remove.emit(book)\">\n        Remove Book from Collection\n        </button>\n\n        <button md-raised-button color=\"primary\" *ngIf=\"!inCollection\" (click)=\"add.emit(book)\">\n        Add Book to Collection\n        </button>\n      </md-card-actions>\n    </md-card>\n\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      justify-content: center;\n      margin: 75px 0;\n    }\n    md-card {\n      max-width: 600px;\n    }\n    md-card-title {\n      margin-left: 10px;\n    }\n    img {\n      width: 60px;\n      min-width: 60px;\n      margin-left: 5px;\n    }\n    md-card-content {\n      margin-top: 15px;\n      margin-bottom: 125px;\n    }\n    md-card-actions {\n      margin-bottom: 0 !important;\n      margin-right: 0;\n    }\n    md-card-footer {\n      padding: 0 25px 25px;\n    }\n  `]\n})\nexport class BookDetailComponent {\n  /**\n   * Presentational components receieve data through @Input() and communicate events\n   * through @Output() but generally maintain no internal state of their\n   * own. All decisions are delegated to 'container', or 'smart'\n   * components before data updates flow back down.\n   *\n   * More on 'smart' and 'presentational' components: https://gist.github.com/btroncone/a6e4347326749f938510#utilizing-container-components\n   */\n  @Input() book: Book;\n  @Input() inCollection: boolean;\n  @Output() add = new EventEmitter<Book>();\n  @Output() remove = new EventEmitter<Book>();\n\n\n  /**\n   * Tip: Utilize getters to keep templates clean\n   */\n  get id() {\n    return this.book.id;\n  }\n\n  get title() {\n    return this.book.volumeInfo.title;\n  }\n\n  get subtitle() {\n    return this.book.volumeInfo.subtitle;\n  }\n\n  get description() {\n    return this.book.volumeInfo.description;\n  }\n\n  get thumbnail() {\n    return this.book.volumeInfo.imageLinks.smallThumbnail;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/book-detail.ts","import { Component, Input } from '@angular/core';\nimport { Book } from '../models/book';\n\n@Component({\n  selector: 'bc-book-preview-list',\n  template: `\n    <bc-book-preview *ngFor=\"let book of books\" [book]=\"book\"></bc-book-preview>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n  `]\n})\nexport class BookPreviewListComponent {\n  @Input() books: Book[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/book-preview-list.ts","import { Component, Input } from '@angular/core';\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-book-preview',\n  template: `\n    <a [routerLink]=\"['/book', id]\">\n      <md-card>\n        <md-card-title-group>\n          <img md-card-sm-image *ngIf=\"thumbnail\" [src]=\"thumbnail\"/>\n          <md-card-title>{{ title }}</md-card-title>\n          <md-card-subtitle *ngIf=\"subtitle\">{{ subtitle }}</md-card-subtitle>\n        </md-card-title-group>\n        <md-card-content>\n          <p *ngIf=\"description\">{{ description | bcEllipsis }}</p>\n        </md-card-content>\n        <md-card-footer>\n          <bc-book-authors [book]=\"book\"></bc-book-authors>\n        </md-card-footer>\n      </md-card>\n    </a>\n  `,\n  styles: [`\n    md-card {\n      width: 400px;\n      height: 300px;\n      margin: 15px;\n    }\n    md-card-title {\n      margin-right: 10px;\n    }\n    a {\n      color: inherit;\n      text-decoration: none;\n    }\n    img {\n      width: 60px;\n      min-width: 60px;\n      margin-left: 5px;\n    }\n    md-card-content {\n      margin-top: 15px;\n    }\n    span {\n      display: inline-block;\n      font-size: 13px;\n    }\n    md-card-footer {\n      padding: 0 25px 25px;\n    }\n  `]\n})\nexport class BookPreviewComponent {\n  @Input() book: Book;\n\n  get id() {\n    return this.book.id;\n  }\n\n  get title() {\n    return this.book.volumeInfo.title;\n  }\n\n  get subtitle() {\n    return this.book.volumeInfo.subtitle;\n  }\n\n  get description() {\n    return this.book.volumeInfo.description;\n  }\n\n  get thumbnail(): string | boolean {\n    if (this.book.volumeInfo.imageLinks) {\n      return this.book.volumeInfo.imageLinks.smallThumbnail;\n    }\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/book-preview.ts","import 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { Component, Output, Input, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'bc-book-search',\n  template: `\n    <md-card>\n      <md-card-title>Find a Book</md-card-title>\n      <md-card-content>\n        <md-input placeholder=\"Search for a book\" [value]=\"query\" (keyup)=\"search.emit($event.target.value)\"></md-input>\n        <md-spinner [class.show]=\"searching\"></md-spinner>\n      </md-card-content>\n    </md-card>\n  `,\n  styles: [`\n    md-card-title,\n    md-card-content {\n      display: flex;\n      justify-content: center;\n    }\n\n    md-input {\n      width: 300px;\n    }\n\n    md-card-spinner {\n      padding-left: 60px; // Make room for the spinner\n    }\n\n    md-spinner {\n      width: 30px;\n      height: 30px;\n      position: relative;\n      top: 10px;\n      left: 10px;\n      opacity: 0.0;\n    }\n\n    md-spinner.show {\n      opacity: 1.0;\n    }\n  `]\n})\nexport class BookSearchComponent {\n  @Input() query: string = '';\n  @Input() searching = false;\n  @Output() search = new EventEmitter<string>();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/book-search.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { BookAuthorsComponent } from './book-authors';\nimport { BookDetailComponent } from './book-detail';\nimport { BookPreviewComponent } from './book-preview';\nimport { BookPreviewListComponent } from './book-preview-list';\nimport { BookSearchComponent } from './book-search';\nimport { LayoutComponent } from './layout';\nimport { NavItemComponent } from './nav-item';\nimport { SidenavComponent } from './sidenav';\nimport { ToolbarComponent } from './toolbar';\n\nimport { PipesModule } from '../pipes';\n\n\nexport const COMPONENTS = [\n  BookAuthorsComponent,\n  BookDetailComponent,\n  BookPreviewComponent,\n  BookPreviewListComponent,\n  BookSearchComponent,\n  LayoutComponent,\n  NavItemComponent,\n  SidenavComponent,\n  ToolbarComponent,\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    RouterModule,\n    PipesModule,\n  ],\n  declarations: COMPONENTS,\n  exports: COMPONENTS\n})\nexport class ComponentsModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/index.ts","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'portfolio-layout',\n  template: `\n    <md-sidenav-layout fullscreen>\n      <ng-content></ng-content>\n    </md-sidenav-layout>\n  `,\n  styles: [`\n    md-sidenav-layout {\n      background: rgba(0, 0, 0, 0.03);\n    }\n    \n    *, /deep/ * {\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n  `]\n})\nexport class LayoutComponent { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/layout.ts","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'portfolio-nav-item',\n  template: `\n    <a md-list-item [routerLink]=\"routerLink\" (click)=\"activate.emit()\">\n      <md-icon md-list-icon>{{ icon }}</md-icon>\n      <span md-line><ng-content></ng-content></span>\n      <span md-line class=\"secondary\">{{ hint }}</span>\n    </a>\n  `,\n  styles: [`\n    .secondary {\n      color: rgba(0, 0, 0, 0.54);\n    }\n  `]\n})\nexport class NavItemComponent {\n  @Input() icon: string = '';\n  @Input() hint: string = '';\n  @Input() routerLink: string | any[] = '/';\n  @Output() activate = new EventEmitter();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/nav-item.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'portfolio-sidenav',\n  template: `\n    <md-sidenav [opened]=\"open\">\n      <md-nav-list>\n        <ng-content></ng-content>\n      </md-nav-list>\n    </md-sidenav>\n  `,\n  styles: [`\n    md-sidenav {\n      width: 300px;\n    }\n  `]\n})\nexport class SidenavComponent {\n  @Input() open = false;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/sidenav.ts","import { Component, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'portfolio-toolbar',\n  template: `\n    <md-toolbar color=\"primary\">\n      <button md-icon-button (click)=\"openMenu.emit()\">\n        <md-icon>menu</md-icon>\n      </button>\n      <ng-content></ng-content>\n    </md-toolbar>\n  `\n})\nexport class ToolbarComponent {\n  @Output() openMenu = new EventEmitter();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/toolbar.ts","import 'rxjs/add/operator/let';\nimport { Observable } from 'rxjs/Observable';\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as fromRoot from '../reducers';\nimport * as layout from '../actions/layout';\n\n\n@Component({\n  selector: 'project-collection-app',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <portfolio-layout>\n      <portfolio-sidenav [open]=\"showSidenav$ | async\">\n        <portfolio-nav-item (activate)=\"closeSidenav()\" routerLink=\"/\" icon=\"book\" hint=\"View my works\">\n          My Work\n        </portfolio-nav-item>\n        <portfolio-nav-item (activate)=\"closeSidenav()\" routerLink=\"/project/find\" icon=\"search\" hint=\"Find my projects\">\n          Browse Projects\n        </portfolio-nav-item>\n        <portfolio-nav-item (activate)=\"closeSidenav()\" routerLink=\"/resume\" icon=\"search\" hint=\"Find my projects\">\n          Resume\n        </portfolio-nav-item>\n        <portfolio-nav-item (activate)=\"closeSidenav()\" routerLink=\"/details\" icon=\"search\" hint=\"Find my projects\">\n          This portfolio\n        </portfolio-nav-item>\n      </portfolio-sidenav>\n      <portfolio-toolbar (openMenu)=\"openSidenav()\">\n        Eric Alter\n      </portfolio-toolbar>\n\n      <router-outlet></router-outlet>\n    </portfolio-layout>\n  `\n})\nexport class AppComponent {\n  showSidenav$: Observable<boolean>;\n\n  constructor(private store: Store<fromRoot.State>) {\n    /**\n     * Selectors can be applied with the `select` operator which passes the state\n     * tree to the provided selector\n     */\n    this.showSidenav$ = this.store.select(fromRoot.getShowSidenav);\n  }\n\n  closeSidenav() {\n    /**\n     * All state updates are handled through dispatched actions in 'container'\n     * components. This provides a clear, reproducible history of state\n     * updates and user interaction through the life of our \n     * application.\n     */\n    this.store.dispatch(new layout.CloseSidenavAction());\n  }\n\n  openSidenav() {\n    this.store.dispatch(new layout.OpenSidenavAction());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/app.ts","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as fromRoot from '../reducers';\nimport * as collection from '../actions/collection';\nimport { Book } from '../models/book';\n\n\n@Component({\n  selector: 'bc-selected-book-page',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <bc-book-detail\n      [book]=\"book$ | async\"\n      [inCollection]=\"isSelectedBookInCollection$ | async\"\n      (add)=\"addToCollection($event)\"\n      (remove)=\"removeFromCollection($event)\">\n    </bc-book-detail>\n  `\n})\nexport class SelectedBookPageComponent {\n  book$: Observable<Book>;\n  isSelectedBookInCollection$: Observable<boolean>;\n\n  constructor(private store: Store<fromRoot.State>) {\n    this.book$ = store.select(fromRoot.getSelectedBook);\n    this.isSelectedBookInCollection$ = store.select(fromRoot.isSelectedBookInCollection);\n  }\n\n  addToCollection(book: Book) {\n    this.store.dispatch(new collection.AddBookAction(book));\n  }\n\n  removeFromCollection(book: Book) {\n    this.store.dispatch(new collection.RemoveBookAction(book));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/containers/selected-book-page.ts","import { DBSchema } from '@ngrx/db';\n\n\n/**\n * ngrx/db uses a simple schema config object to initialize stores in IndexedDB.\n */\nexport const schema: DBSchema = {\n  version: 1,\n  name: 'books_app',\n  stores: {\n    books: {\n      autoIncrement: true,\n      primaryKey: 'id'\n    }\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/db.ts","import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/skip';\nimport 'rxjs/add/operator/takeUntil';\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { empty } from 'rxjs/observable/empty';\nimport { of } from 'rxjs/observable/of';\n\nimport { GoogleBooksService } from '../services/google-books';\nimport * as book from '../actions/book';\n\n\n/**\n * Effects offer a way to isolate and easily test side-effects within your\n * application. StateUpdates is an observable of the latest state and\n * dispatched action. The `toPayload` helper function returns just\n * the payload of the currently dispatched action, useful in\n * instances where the current state is not necessary.\n *\n * If you are unfamiliar with the operators being used in these examples, please\n * check out the sources below:\n *\n * Official Docs: http://reactivex.io/rxjs/manual/overview.html#categories-of-operators\n * RxJS 5 Operators By Example: https://gist.github.com/btroncone/d6cf141d6f2c00dc6b35\n */\n\n@Injectable()\nexport class BookEffects {\n  constructor(private actions$: Actions, private googleBooks: GoogleBooksService) { }\n\n\n  @Effect()\n  search$: Observable<Action> = this.actions$\n    .ofType(book.ActionTypes.SEARCH)\n    .debounceTime(300)\n    .map((action: book.SearchAction) => action.payload)\n    .switchMap(query => {\n      if (query === '') {\n        return empty();\n      }\n\n      const nextSearch$ = this.actions$.ofType(book.ActionTypes.SEARCH).skip(1);\n\n      return this.googleBooks.searchBooks(query)\n        .takeUntil(nextSearch$)\n        .map(books => new book.SearchCompleteAction(books))\n        .catch(() => of(new book.SearchCompleteAction([])));\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/effects/book.ts","import 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\nimport { Injectable } from '@angular/core';\nimport { Action } from '@ngrx/store';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Database } from '@ngrx/db';\nimport { Observable } from 'rxjs/Observable';\nimport { defer } from 'rxjs/observable/defer';\nimport { of } from 'rxjs/observable/of';\n\nimport * as collection from '../actions/collection';\nimport { Book } from '../models/book';\n\n\n@Injectable()\nexport class CollectionEffects {\n  constructor(private actions$: Actions, private db: Database) { }\n\n  /**\n   * This effect does not yield any actions back to the store. Set\n   * `dispatch` to false to hint to @ngrx/effects that it should\n   * ignore any elements of this effect stream.\n   * \n   * The `defer` observable accepts an observable factory function\n   * that is called when the observable is subscribed to.\n   * Wrapping the database open call in `defer` makes\n   * effect easier to test.\n   */\n  @Effect({ dispatch: false })\n  openDB$: Observable<any> = defer(() => {\n    return this.db.open('books_app');\n  });\n\n  /**\n   * This effect makes use of the `startWith` operator to trigger\n   * the effect immediately on startup.\n   */\n  @Effect()\n  loadCollection$: Observable<Action> = this.actions$\n    .ofType(collection.ActionTypes.LOAD)\n    .startWith(new collection.LoadAction())\n    .switchMap(() =>\n      this.db.query('books')\n        .toArray()\n        .map((books: Book[]) => new collection.LoadSuccessAction(books))\n        .catch(error => of(new collection.LoadFailAction(error)))\n    );\n\n  @Effect()\n  addBookToCollection$: Observable<Action> = this.actions$\n    .ofType(collection.ActionTypes.ADD_BOOK)\n    .map((action: collection.AddBookAction) => action.payload)\n    .mergeMap(book =>\n      this.db.insert('books', [ book ])\n        .map(() => new collection.AddBookSuccessAction(book))\n        .catch(() => of(new collection.AddBookFailAction(book)))\n    );\n\n\n  @Effect()\n  removeBookFromCollection$: Observable<Action> = this.actions$\n    .ofType(collection.ActionTypes.REMOVE_BOOK)\n    .map((action: collection.RemoveBookAction) => action.payload)\n    .mergeMap(book =>\n      this.db.executeWrite('books', 'delete', [ book.id ])\n        .map(() => new collection.RemoveBookSuccessAction(book))\n        .catch(() => of(new collection.RemoveBookFailAction(book)))\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/effects/collection.ts","import { Pipe } from '@angular/core';\n\n\n@Pipe({ name: 'bcAddCommas' })\nexport class AddCommasPipe {\n  transform(authors: null | string[]) {\n    if (!authors) return 'Author Unknown';\n\n    switch (authors.length) {\n      case 0:\n        return 'Author Unknown';\n      case 1:\n        return authors[0];\n      case 2:\n        return authors.join(' and ');\n      default:\n        const last = authors[authors.length - 1];\n        const remaining = authors.slice(0, -1);\n        return `${remaining.join(', ')}, and ${last}`;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/add-commas.ts","import { Pipe } from '@angular/core';\n\n\n@Pipe({ name: 'bcEllipsis' })\nexport class EllipsisPipe {\n  transform(str: string) {\n    const withoutHtml = str.replace(/(<([^>]+)>)/ig, '');\n\n    if (str.length >= 250) {\n      return withoutHtml.slice(0, 250) + '...';\n    }\n\n    return withoutHtml;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/ellipsis.ts","import { NgModule } from '@angular/core';\n\nimport { AddCommasPipe } from './add-commas';\nimport { EllipsisPipe } from './ellipsis';\n\n\nexport const PIPES = [\n  AddCommasPipe,\n  EllipsisPipe,\n];\n\n@NgModule({\n  declarations: PIPES,\n  exports: PIPES\n})\nexport class PipesModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/index.ts","import { createSelector } from 'reselect';\nimport { Book } from '../models/book';\nimport * as book from '../actions/book';\nimport * as collection from '../actions/collection';\n\n\nexport interface State {\n  ids: string[];\n  entities: { [id: string]: Book };\n  selectedBookId: string | null;\n};\n\nconst initialState: State = {\n  ids: [],\n  entities: {},\n  selectedBookId: null,\n};\n\nexport function reducer(state = initialState, action: book.Actions | collection.Actions): State {\n  switch (action.type) {\n    case book.ActionTypes.SEARCH_COMPLETE:\n    case collection.ActionTypes.LOAD_SUCCESS: {\n      const books = action.payload;\n      const newBooks = books.filter(book => !state.entities[book.id]);\n\n      const newBookIds = newBooks.map(book => book.id);\n      const newBookEntities = newBooks.reduce((entities: { [id: string]: Book }, book: Book) => {\n        return Object.assign(entities, {\n          [book.id]: book\n        });\n      }, {});\n\n      return {\n        ids: [ ...state.ids, ...newBookIds ],\n        entities: Object.assign({}, state.entities, newBookEntities),\n        selectedBookId: state.selectedBookId\n      };\n    }\n\n    case book.ActionTypes.LOAD: {\n      const book = action.payload;\n\n      if (state.ids.indexOf(book.id) > -1) {\n        return state;\n      }\n\n      return {\n        ids: [ ...state.ids, book.id ],\n        entities: Object.assign({}, state.entities, {\n          [book.id]: book\n        }),\n        selectedBookId: state.selectedBookId\n      };\n    }\n\n    case book.ActionTypes.SELECT: {\n      return {\n        ids: state.ids,\n        entities: state.entities,\n        selectedBookId: action.payload\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n/**\n * Because the data structure is defined within the reducer it is optimal to\n * locate our selector functions at this level. If store is to be thought of\n * as a database, and reducers the tables, selectors can be considered the\n * queries into said database. Remember to keep your selectors small and\n * focused so they can be combined and composed to fit each particular\n * use-case.\n */\n\nexport const getEntities = (state: State) => state.entities;\n\nexport const getIds = (state: State) => state.ids;\n\nexport const getSelectedId = (state: State) => state.selectedBookId;\n\nexport const getSelected = createSelector(getEntities, getSelectedId, (entities, selectedId) => {\n  return entities[selectedId];\n});\n\nexport const getAll = createSelector(getEntities, getIds, (entities, ids) => {\n  return ids.map(id => entities[id]);\n});\n\n\n// WEBPACK FOOTER //\n// ./src/app/reducers/books.ts","import { createSelector } from 'reselect';\nimport * as collection from '../actions/collection';\n\n\nexport interface State {\n  loaded: boolean;\n  loading: boolean;\n  ids: string[];\n};\n\nconst initialState: State = {\n  loaded: false,\n  loading: false,\n  ids: []\n};\n\nexport function reducer(state = initialState, action: collection.Actions): State {\n  switch (action.type) {\n    case collection.ActionTypes.LOAD: {\n      return Object.assign({}, state, {\n        loading: true\n      });\n    }\n\n    case collection.ActionTypes.LOAD_SUCCESS: {\n      const books = action.payload;\n\n      return {\n        loaded: true,\n        loading: false,\n        ids: books.map(book => book.id)\n      };\n    }\n\n    case collection.ActionTypes.ADD_BOOK_SUCCESS:\n    case collection.ActionTypes.REMOVE_BOOK_FAIL: {\n      const book = action.payload;\n\n      if (state.ids.indexOf(book.id) > -1) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        ids: [ ...state.ids, book.id ]\n      });\n    }\n\n    case collection.ActionTypes.REMOVE_BOOK_SUCCESS:\n    case collection.ActionTypes.ADD_BOOK_FAIL: {\n      const book = action.payload;\n\n      return Object.assign({}, state, {\n        ids: state.ids.filter(id => id !== book.id)\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\nexport const getLoaded = (state: State) => state.loaded;\n\nexport const getLoading = (state: State) => state.loading;\n\nexport const getIds = (state: State) => state.ids;\n\n\n// WEBPACK FOOTER //\n// ./src/app/reducers/collection.ts","import { createSelector } from 'reselect';\nimport * as layout from '../actions/layout';\n\n\nexport interface State {\n  showSidenav: boolean;\n}\n\nconst initialState: State = {\n  showSidenav: false,\n};\n\nexport function reducer(state = initialState, action: layout.Actions): State {\n  switch (action.type) {\n    case layout.ActionTypes.CLOSE_SIDENAV:\n      return {\n        showSidenav: false\n      };\n\n    case layout.ActionTypes.OPEN_SIDENAV:\n      return {\n        showSidenav: true\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const getShowSidenav = (state: State) => state.showSidenav;\n\n\n// WEBPACK FOOTER //\n// ./src/app/reducers/layout.ts","import { createSelector } from 'reselect';\nimport * as book from '../actions/book';\n\n\nexport interface State {\n  ids: string[];\n  loading: boolean;\n  query: string;\n};\n\nconst initialState: State = {\n  ids: [],\n  loading: false,\n  query: ''\n};\n\nexport function reducer(state = initialState, action: book.Actions): State {\n  switch (action.type) {\n    case book.ActionTypes.SEARCH: {\n      const query = action.payload;\n\n      if (query === '') {\n        return {\n          ids: [],\n          loading: false,\n          query\n        };\n      }\n\n      return Object.assign({}, state, {\n        query,\n        loading: true\n      });\n    }\n\n    case book.ActionTypes.SEARCH_COMPLETE: {\n      const books = action.payload;\n\n      return {\n        ids: books.map(book => book.id),\n        loading: false,\n        query: state.query\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\nexport const getIds = (state: State) => state.ids;\n\nexport const getQuery = (state: State) => state.query;\n\nexport const getLoading = (state: State) => state.loading;\n\n\n// WEBPACK FOOTER //\n// ./src/app/reducers/search.ts","import { Routes } from '@angular/router';\nimport { BookExistsGuard } from './guards/book-exists';\nimport { FindBookPageComponent } from './containers/find-book-page';\nimport { ResumeComponent } from './containers/resume/resume.component';\nimport { DetailsComponent } from './containers/details/details.component';\nimport { NotFoundPageComponent } from './containers/not-found-page';\nimport { ViewBookPageComponent } from './containers/view-book-page';\nimport { CollectionPageComponent } from './containers/collection-page';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: CollectionPageComponent\n  },\n  {\n    path: 'project/find',\n    component: FindBookPageComponent\n  },\n  {\n    path: 'resume',\n    component: ResumeComponent\n  },\n  {\n    path: 'details',\n    component: DetailsComponent\n  },\n  {\n    path: 'book/:id',\n    canActivate: [ BookExistsGuard ],\n    component: ViewBookPageComponent\n  },\n  {\n    path: '**',\n    component: NotFoundPageComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routes.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/containers/details/details.component.css\n// module id = 890\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/containers/resume/resume.component.css\n// module id = 891\n// module chunks = 0","module.exports = \"<p>\\n  details works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/containers/details/details.component.html\n// module id = 892\n// module chunks = 0","module.exports = \"<p>\\n  resume works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/containers/resume/resume.component.html\n// module id = 893\n// module chunks = 0","import { Action } from '@ngrx/store';\nimport { Book } from '../models/book';\nimport { type } from '../util';\n\n/**\n * For each action type in an action group, make a simple\n * enum object for all of this group's action types.\n * \n * The 'type' utility function coerces strings into string\n * literal types and runs a simple check to guarantee all\n * action types in the application are unique. \n */\nexport const ActionTypes = {\n  SEARCH:           type('[Book] Search'),\n  SEARCH_COMPLETE:  type('[Book] Search Complete'),\n  LOAD:             type('[Book] Load'),\n  SELECT:           type('[Book] Select'),\n};\n\n\n/**\n * Every action is comprised of at least a type and an optional\n * payload. Expressing actions as classes enables powerful \n * type checking in reducer functions.\n * \n * See Discriminated Unions: https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions\n */\nexport class SearchAction implements Action {\n  type = ActionTypes.SEARCH;\n\n  constructor(public payload: string) { }\n}\n\nexport class SearchCompleteAction implements Action {\n  type = ActionTypes.SEARCH_COMPLETE;\n\n  constructor(public payload: Book[]) { }\n}\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n\n  constructor(public payload: Book) { }\n}\n\nexport class SelectAction implements Action {\n  type = ActionTypes.SELECT;\n\n  constructor(public payload: string) { }\n}\n\n/**\n * Export a type alias of all actions in this action group\n * so that reducers can easily compose action types\n */\nexport type Actions\n  = SearchAction\n  | SearchCompleteAction\n  | LoadAction\n  | SelectAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/actions/book.ts","import { createSelector } from 'reselect';\nimport { ActionReducer } from '@ngrx/store';\nimport * as fromRouter from '@ngrx/router-store';\nimport { environment } from '../../environments/environment';\nimport { Book } from '../models/book';\n\n/**\n * The compose function is one of our most handy tools. In basic terms, you give\n * it any number of functions and it returns a function. This new function\n * takes a value and chains it through every composed function, returning\n * the output.\n *\n * More: https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch5.html\n */\nimport { compose } from '@ngrx/core/compose';\n\n/**\n * storeFreeze prevents state from being mutated. When mutation occurs, an\n * exception will be thrown. This is useful during development mode to\n * ensure that none of the reducers accidentally mutates the state.\n */\nimport { storeFreeze } from 'ngrx-store-freeze';\n\n/**\n * combineReducers is another useful metareducer that takes a map of reducer\n * functions and creates a new reducer that stores the gathers the values\n * of each reducer and stores them using the reducer's key. Think of it\n * almost like a database, where every reducer is a table in the db.\n *\n * More: https://egghead.io/lessons/javascript-redux-implementing-combinereducers-from-scratch\n */\nimport { combineReducers } from '@ngrx/store';\n\n\n/**\n * Every reducer module's default export is the reducer function itself. In\n * addition, each module should export a type or interface that describes\n * the state of the reducer plus any selector functions. The `* as`\n * notation packages up all of the exports into a single object.\n */\nimport * as fromSearch from './search';\nimport * as fromBooks from './books';\nimport * as fromCollection from './collection';\nimport * as fromLayout from './layout';\n\n\n/**\n * As mentioned, we treat each reducer like a table in a database. This means\n * our top level state interface is just a map of keys to inner state types.\n */\nexport interface State {\n  search: fromSearch.State;\n  books: fromBooks.State;\n  collection: fromCollection.State;\n  layout: fromLayout.State;\n  router: fromRouter.RouterState;\n}\n\n\n/**\n * Because metareducers take a reducer function and return a new reducer,\n * we can use our compose helper to chain them together. Here we are\n * using combineReducers to make our top level reducer, and then\n * wrapping that in storeLogger. Remember that compose applies\n * the result from right to left.\n */\nconst reducers = {\n  search: fromSearch.reducer,\n  books: fromBooks.reducer,\n  collection: fromCollection.reducer,\n  layout: fromLayout.reducer,\n  router: fromRouter.routerReducer,\n};\n\nconst developmentReducer: ActionReducer<State> = compose(storeFreeze, combineReducers)(reducers);\nconst productionReducer: ActionReducer<State> = combineReducers(reducers);\n\nexport function reducer(state: any, action: any) {\n  if (environment.production) {\n    return productionReducer(state, action);\n  }\n  else {\n    return developmentReducer(state, action);\n  }\n}\n\n\n/**\n * A selector function is a map function factory. We pass it parameters and it\n * returns a function that maps from the larger state tree into a smaller\n * piece of state. This selector simply selects the `books` state.\n *\n * Selectors are used with the `select` operator.\n *\n * ```ts\n * class MyComponent {\n * \tconstructor(state$: Observable<State>) {\n * \t  this.booksState$ = state$.select(getBooksState);\n * \t}\n * }\n * ```\n */\nexport const getBooksState = (state: State) => state.books;\n\n/**\n * Every reducer module exports selector functions, however child reducers\n * have no knowledge of the overall state tree. To make them useable, we\n * need to make new selectors that wrap them.\n *\n * Once again our compose function comes in handy. From right to left, we\n * first select the books state then we pass the state to the book\n * reducer's getBooks selector, finally returning an observable\n * of search results.\n *\n * Share memoizes the selector functions and publishes the result. This means\n * every time you call the selector, you will get back the same result\n * observable. Each subscription to the resultant observable\n * is shared across all subscribers.\n */\n export const getBookEntities = createSelector(getBooksState, fromBooks.getEntities);\n export const getBookIds = createSelector(getBooksState, fromBooks.getIds);\n export const getSelectedBookId = createSelector(getBooksState, fromBooks.getSelectedId);\n export const getSelectedBook = createSelector(getBooksState, fromBooks.getSelected);\n\n\n/**\n * Just like with the books selectors, we also have to compose the search\n * reducer's and collection reducer's selectors.\n */\nexport const getSearchState = (state: State) => state.search;\n\nexport const getSearchBookIds = createSelector(getSearchState, fromSearch.getIds);\nexport const getSearchQuery = createSelector(getSearchState, fromSearch.getQuery);\nexport const getSearchLoading = createSelector(getSearchState, fromSearch.getLoading);\n\n\n/**\n * Some selector functions create joins across parts of state. This selector\n * composes the search result IDs to return an array of books in the store.\n */\nexport const getSearchResults = createSelector(getBookEntities, getSearchBookIds, (books, searchIds) => {\n  return searchIds.map(id => books[id]);\n});\n\n\n\nexport const getCollectionState = (state: State) => state.collection;\n\nexport const getCollectionLoaded = createSelector(getCollectionState, fromCollection.getLoaded);\nexport const getCollectionLoading = createSelector(getCollectionState, fromCollection.getLoading);\nexport const getCollectionBookIds = createSelector(getCollectionState, fromCollection.getIds);\n\nexport const getBookCollection = createSelector(getBookEntities, getCollectionBookIds, (entities, ids) => {\n  return ids.map(id => entities[id]);\n});\n\nexport const isSelectedBookInCollection = createSelector(getCollectionBookIds, getSelectedBookId, (ids, selected) => {\n  return ids.indexOf(selected) > -1;\n});\n\n/**\n * Layout Reducers\n */\nexport const getLayoutState = (state: State) => state.layout;\n\nexport const getShowSidenav = createSelector(getLayoutState, fromLayout.getShowSidenav);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reducers/index.ts"],"sourceRoot":""}